The js code in q5.html simply sends a POST request to the server, with /post as its destination and message=Give Edward a Raise!
What happens is once the user enters the website while he's logged in Slack Off, the js code sends a request to the server, and the one who sends the request is the user of course. So the request is sent behalf of the user, and the browser adds the cookies it already has regarding slack off server. The errors we get in the browser console are a check that the browser does: once it gets the response from the server, it gets whether its cross origin resource flag includes the domain which initially sent a request, and if there is no match, meaning the server doesn't actually permit sending this specific request addressed other than what is specified, the browers prints the CORS error, but the request is already proccessed in the server.

The vulnerability is that the server doesn't use csrf tokens. Csrf token are tokens that needs to be supplied within important requests such are money transfer. It will prevent csrf because we cannot guess (very low probability) the token that needs to be supplied with the request, thus the server will dump the request and not treat it as a valid one.