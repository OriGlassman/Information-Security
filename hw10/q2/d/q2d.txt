In winston.py, I convert "I love you" into bits, and each time take 3 bits and convert that to int, and put it in reserved in the tcp header. I also put the right flags (syn/ack) and set the ack to the number of packets that julia would need to get; the packets are numbered with seq.
In julia.py, I hold an list of index seen, which are the seq numbers in the packets. Everytime a packet is handled, we add it to the list. That way, every packet is handled only once.
after handling a packet, we check whether the seq and the ack numbers are equal. If so, we got all the packets. Every packet, I convert the reserved int to 3-length bits and concatenate it to a string. After getting all the packets, the string bits are complete, I now iterate over every byte (8 bits in the string) and convert it to a character. I slice the last bit as it is an excessive one. The result is "I love you". (To fetch packets I use scappy's sniff with a stop_filter param which takes a function and when that functions returns True scappy stops sniffing !)